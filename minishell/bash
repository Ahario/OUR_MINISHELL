char *replace_ds_parse(char *str, t_data *data, int flag);
char *replace_dollar_sign(char *str, t_data *data);
void replace_parse(t_data *data);
int get_temp_size(char *str);
void parse(char *ch, t_data *data);
int check_flag(int flag, char *str);
int totla_path_len(char *str);
int ft_charlen(char *str);
int check_built(t_data *data, char *str);
void play_built(t_data *data, char *str);
void	ft_set_data(t_data *data);
char	**ft_malloc_envp(char **envp);
void	parse_bigpart(t_data *data);
char	*get_full_path_dq(char *str, t_data *data);
char	*replace_dollar_sign(char *st, t_data *data);
char	*replace_dollar_sign_dq(char *st, t_data *data);
struct s_data	*clean_all(t_data *data);
char	*get_full_path(char *str, t_data *data);
int	ft_charlen_export(char *str);
char	*get_full_exit(char *temp, char *str);
//t_arg	*set_cmd(char *ch);
void	before_init(void);
void	ft_signal(void);
void	ft_signal_cmd(void);
void	exit_c_d(void);
void	error_message(char *str, char *des);
void	ft_exit(t_data *data);
int	exitcheck(t_arg *head);
void	exit2(void);
void	ft_env(char **envp);
void	ft_export(t_data *data);
char	*find_key(char *envp);
int	ft_check_key(char *str, int flag);
char	*find_value(char *envp);
void	ft_unset(t_data *data);
void	ft_pwd(t_data *data);
void	ft_cd(t_data *data);
void	ft_echo(t_data *data, int flag);
void	ft_cmd_start(t_data *data);
char	**ft_arg_split(t_arg *cmd);
char	*ft_executable(t_data *data, int i);
void	free_split(char **str);
struct s_arg	*ft_list_del(t_arg *cmd);
struct s_arg	*ft_list_del_n(t_arg *cmd);
int	ft_redir(t_data	*data);
void	ft_redirect_restore(t_data *data, int flag);
void	ft_here_doc(t_data *data, char *str, int *i, char *stop);
struct s_data	*ft_pipe_list(t_data *data);
void	ft_pipe_cmd(t_data *data);
